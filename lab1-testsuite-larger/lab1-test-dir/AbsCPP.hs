

module AbsCPP where

-- Haskell module generated by the BNF converter




newtype UIdent = UIdent String deriving (Eq, Ord, Show, Read)
data Program = PDefs [Def]
  deriving (Eq, Ord, Show, Read)

data Def
    = DFun Fun
    | DIFun InFun
    | DTypeDef TypeDef
    | DStructDef StructDef
    | DUsing QConst
    | DDecVar DecVar
  deriving (Eq, Ord, Show, Read)

data InFun = InlineFunction Fun
  deriving (Eq, Ord, Show, Read)

data Fun = FuctionHead Type UIdent [Arg] FunBod
  deriving (Eq, Ord, Show, Read)

data FunBod = FunctionBody | FunctionBodyStm [Stm]
  deriving (Eq, Ord, Show, Read)

data TypeDef = TypeDef Type UIdent
  deriving (Eq, Ord, Show, Read)

data StructDef = StructDef UIdent [DecVar]
  deriving (Eq, Ord, Show, Read)

data Arg
    = ArgIdLess Type
    | ArgDecVar Type UIdent
    | ArgDecVarDefault Type UIdent Exp
  deriving (Eq, Ord, Show, Read)

data DecVar = DecVar Type [UIdent] | DecVarDefault Type UIdent Exp
  deriving (Eq, Ord, Show, Read)

data BType = TQConst QConst | TInt | TDouble | TBool | TVoid
  deriving (Eq, Ord, Show, Read)

data Type
    = TType BType | TConst BType | TConstRef BType | TRef BType
  deriving (Eq, Ord, Show, Read)

data Value
    = VInt Integer
    | VDouble Double
    | VChar Char
    | ValConcatString [ValString]
  deriving (Eq, Ord, Show, Read)

data ValString = ValSingleString String
  deriving (Eq, Ord, Show, Read)

data QConst
    = QConstRec QConst QConst
    | QConstBase UIdent
    | QConstTemplateBase TInstanciation
  deriving (Eq, Ord, Show, Read)

data TInstanciation = Template UIdent [Type]
  deriving (Eq, Ord, Show, Read)

data Stm
    = StmDec DecVar
    | StmExp Exp
    | StmRet Exp
    | StmWhile Exp Stm
    | StmDo Stm Exp
    | StmFor DecVar Exp Exp Stm
    | StmBlock [Stm]
    | StmIf Exp Stm
    | StmIfElse Exp Stm Stm
    | StmTypeDef TypeDef
    | StmStructDef StructDef
  deriving (Eq, Ord, Show, Read)

data Exp
    = ExValue Value
    | ExIndex Exp Exp
    | ExCall Exp [Exp]
    | ExQConst QConst
    | ExProjPoint Exp Exp
    | ExProjArrow Exp Exp
    | ExPostInc Exp
    | ExPostDec Exp
    | ExDeref Exp
    | ExPreInc Exp
    | ExPreDec Exp
    | ExNot Exp
    | ExMult Exp Exp
    | ExDiv Exp Exp
    | ExMod Exp Exp
    | ExAdd Exp Exp
    | ExSub Exp Exp
    | ExLeftShft Exp Exp
    | ExRightSft Exp Exp
    | ExLess Exp Exp
    | ExGreater Exp Exp
    | ExLessEq Exp Exp
    | ExGreaterEq Exp Exp
    | ExEqual Exp Exp
    | ExInequal Exp Exp
    | ExConjunc Exp Exp
    | ExDisjunc Exp Exp
    | ExAssign Exp Exp
    | ExAddAssign Exp Exp
    | ExSubAssign Exp Exp
    | ExCond Exp Exp Exp
    | ExThrow Exp
  deriving (Eq, Ord, Show, Read)

